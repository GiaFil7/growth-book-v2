{"version":3,"sources":["Components/EventBar.js","Components/Schedule.js","Components/ItemBar.js","Components/Goals.js","Components/Motivation.js","Components/Todo.js","Components/Happiness.js","Components/Header.js","Components/Item.js","Components/Event.js","App.js","serviceWorker.js","index.js"],"names":["EventBar","props","hours","i","push","value","key","minutes","className","name","id","type","placeholder","autoComplete","onClick","addEvent","src","alt","Schedule","events","ItemBar","addItem","Goals","items","Motivation","onChange","handleChange","Todo","Happiness","Header","Item","state","isHovered","handleHover","bind","this","setState","onMouseEnter","onMouseLeave","checked","isBeingEdited","defaultValue","content","editItem","deleteItem","React","Component","Event","startHour","startMinutes","endHour","endMinutes","desc","App","schedule","goals","motivation","todo","happiness","count","date","searchCheckbox","checkEvent","checkOverlap","prevState","newState","map","item","parseInt","newStartHour","newStartMinutes","newEndHour","newEndMinutes","includes","event","target","document","getElementById","trim","startHourInput","options","selectedIndex","startMinutesInput","endHourInput","endMinutesInput","matchIndex","length","newDesc","newArray","filter","concat","sort","x","y","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77dccba4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction EventBar (props) {\r\n  const hours = []\r\n  for (let i = 0; i <= 23; i++) {\r\n    hours.push(<option value={i} key={i}>{i < 10 ? '0' + i : i}</option>)\r\n  }\r\n  const minutes = []\r\n  for (let i = 0; i <= 59; i++) {\r\n    minutes.push(<option value={i} key={i}>{i < 10 ? '0' + i : i}</option>)\r\n  }\r\n\r\n  return (\r\n    <div className='itemBar'>\r\n      <select name='startHour' id='startHour'>{hours}</select>\r\n      <span>:</span>\r\n      <select name='startMinutes' id='startMinutes'>{minutes}</select>\r\n      <span>-</span>\r\n      <select name='endHour' id='endHour'>{hours}</select>\r\n      <span>:</span>\r\n      <select name='endMinutes' id='endMinutes'>{minutes}</select>\r\n      <input type='text' id='event' placeholder='Add a new event' autoComplete='off' />\r\n      <button className='noselect' onClick={props.addEvent}>\r\n        <img src='https://img.icons8.com/android/16/000000/plus.png' alt='+' />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventBar\r\n","import React from 'react'\r\nimport EventBar from './EventBar'\r\n\r\nfunction Schedule (props) {\r\n  return (\r\n    <div className='schedule'>\r\n      <div className='bar'>\r\n        <h3 className='title'>Schedule</h3>\r\n        <EventBar addEvent={props.addEvent} />\r\n      </div>\r\n      <div className='itemContainer'>{props.events}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedule\r\n","import React from 'react'\r\n\r\nfunction ItemBar (props) {\r\n  return (\r\n    <div className='itemBar'>\r\n      <input id={props.id} type='text' placeholder={props.placeholder} autoComplete='off' />\r\n      <button className='noselect' onClick={() => props.addItem(props.name, props.id)}>\r\n        <img src='https://img.icons8.com/android/16/000000/plus.png' alt='+' />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemBar\r\n","import React from 'react'\r\nimport ItemBar from './ItemBar'\r\n\r\nfunction Goals (props) {\r\n  return (\r\n    <div className='goals'>\r\n      <div className='bar'>\r\n        <h3 className='title'>Goals</h3>\r\n        <ItemBar\r\n          placeholder='Add new goal'\r\n          addItem={props.addItem}\r\n          id='goal-bar'\r\n          name='goals'\r\n        />\r\n      </div>\r\n      <div className='itemContainer'>{props.items}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Goals\r\n","import React from 'react'\r\n\r\nfunction Motivation (props) {\r\n  return (\r\n    <div className='motivation'>\r\n      <h3 className='title'>Motivation</h3>\r\n      <textarea name='motivation' placeholder='What motivates you today?' onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Motivation\r\n","import React from 'react'\r\nimport ItemBar from './ItemBar'\r\n\r\nfunction Todo (props) {\r\n  return (\r\n    <div className='todo'>\r\n      <div className='bar'>\r\n        <h3 className='title'>To-do</h3>\r\n        <ItemBar\r\n          placeholder='Add new task'\r\n          addItem={props.addItem}\r\n          id='todo-bar'\r\n          name='todo'\r\n        />\r\n      </div>\r\n      <div className='itemContainer'>{props.items}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\n\r\nfunction Happiness (props) {\r\n  return (\r\n    <div className='happiness'>\r\n      <h3 className='title'>Happiness</h3>\r\n      <textarea name='happiness' placeholder='What made you happy today?' onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Happiness\r\n","import React from 'react'\r\n\r\nfunction Header (props) {\r\n  return (\r\n    <div className='header'>\r\n      <img className='logo' src='tree of life.png' alt='logo' />\r\n      <h1>Growth Book</h1>\r\n      <input name='date' className='date' type='text' placeholder='Date' onChange={props.handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nclass Item extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      isHovered: false\r\n    }\r\n    this.handleHover = this.handleHover.bind(this)\r\n  }\r\n\r\n  handleHover () {\r\n    this.setState({\r\n      isHovered: !this.state.isHovered\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='item' onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n        <input\r\n          type='checkbox'\r\n          name={this.props.name}\r\n          id={this.props.id}\r\n          checked={this.props.checked}\r\n          onChange={this.props.handleChange}\r\n        />\r\n        { this.props.isBeingEdited\r\n          ? <input\r\n            id={'edit-' + this.props.id}\r\n            type='text'\r\n            defaultValue={this.props.content}\r\n            autoComplete='off'\r\n          />\r\n          : <p className={this.props.checked ? 'completed' : null}>{this.props.content}</p>}\r\n        <button className={this.state.isHovered ? 'noselect' : 'hide'} onClick={() => this.props.editItem(this.props.name, this.props.id, 'item')}>\r\n          <img src='https://img.icons8.com/material-sharp/10/000000/edit.png' alt='/' />\r\n        </button>\r\n        <button className={this.state.isHovered ? 'noselect' : 'hide'} onClick={() => this.props.deleteItem(this.props.name, this.props.id)}>\r\n          <img src='https://img.icons8.com/fluent-systems-regular/10/000000/delete-sign.png' alt='X' />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\n\r\nclass Event extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      isHovered: false\r\n    }\r\n    this.handleHover = this.handleHover.bind(this)\r\n  }\r\n\r\n  handleHover () {\r\n    this.setState({\r\n      isHovered: !this.state.isHovered\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const hours = []\r\n    for (let i = 0; i <= 23; i++) {\r\n      hours.push(<option value={i} key={i}>{i < 10 ? '0' + i : i}</option>)\r\n    }\r\n    const minutes = []\r\n    for (let i = 0; i <= 59; i++) {\r\n      minutes.push(<option value={i} key={i}>{i < 10 ? '0' + i : i}</option>)\r\n    }\r\n\r\n    const startHour = this.props.startHour < 10 ? '0' + this.props.startHour : this.props.startHour\r\n    const startMinutes = this.props.startMinutes < 10 ? '0' + this.props.startMinutes : this.props.startMinutes\r\n    const endHour = this.props.endHour < 10 ? '0' + this.props.endHour : this.props.endHour\r\n    const endMinutes = this.props.endMinutes < 10 ? '0' + this.props.endMinutes : this.props.endMinutes\r\n\r\n    return (\r\n      <div className='item' onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}>\r\n        {this.props.isBeingEdited\r\n          ? <div>\r\n            <select defaultValue={this.props.startHour} name={'editStartHour' + this.props.id} id={'editStartHour' + this.props.id}>{hours}</select>\r\n            <span>:</span>\r\n            <select defaultValue={this.props.startMinutes} name={'editStartMinutes' + this.props.id} id={'editStartMinutes' + this.props.id}>{minutes}</select>\r\n            <span>-</span>\r\n            <select defaultValue={this.props.endHour} name={'editEndHour' + this.props.id} id={'editEndHour' + this.props.id}>{hours}</select>\r\n            <span>:</span>\r\n            <select defaultValue={this.props.endMinutes} name={'editEndMinutes' + this.props.id} id={'editEndMinutes' + this.props.id}>{minutes}</select>\r\n            <input type='text' id={'event' + this.props.id} defaultValue={this.props.desc} autoComplete='off' />\r\n          </div>\r\n          : <div className='item'><p>{startHour} : {startMinutes} - {endHour} : {endMinutes}</p><p className='desc'>{this.props.desc}</p></div>}\r\n        <button className={this.state.isHovered ? 'noselect' : 'hide'} onClick={() => this.props.editItem('schedule', this.props.id, 'event')}>\r\n          <img src='https://img.icons8.com/material-sharp/10/000000/edit.png' alt='/' />\r\n        </button>\r\n        <button className={this.state.isHovered ? 'noselect' : 'hide'} onClick={() => this.props.deleteItem('schedule', this.props.id)}>\r\n          <img src='https://img.icons8.com/fluent-systems-regular/10/000000/delete-sign.png' alt='X' />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event\r\n","import React from 'react'\nimport './App.css'\n\nimport Schedule from './Components/Schedule'\nimport Goals from './Components/Goals'\nimport Motivation from './Components/Motivation'\nimport Todo from './Components/Todo'\nimport Happiness from './Components/Happiness'\nimport Header from './Components/Header'\nimport Item from './Components/Item'\nimport Event from './Components/Event'\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      schedule: [],\n      goals: [],\n      motivation: '',\n      todo: [],\n      happiness: '',\n      count: 0,\n      date: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.addEvent = this.addEvent.bind(this)\n    this.editItem = this.editItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.searchCheckbox = this.searchCheckbox.bind(this)\n    this.checkEvent = this.checkEvent.bind(this)\n    this.checkOverlap = this.checkOverlap.bind(this)\n  }\n\n  searchCheckbox (name, checked, key) {\n    this.setState(prevState => {\n      const newState = prevState[name].map(item => {\n        key = parseInt(key)\n        if (item.key === key) {\n          return {\n            ...item,\n            checked: !item.checked\n          }\n        } else {\n          return item\n        }\n      })\n      return {[name]: newState}\n    })\n  }\n\n  checkEvent (startHour, startMinutes, endHour, endMinutes) {\n    startHour = parseInt(startHour)\n    startMinutes = parseInt(startMinutes)\n    endHour = parseInt(endHour)\n    endMinutes = parseInt(endMinutes)\n\n    if (startHour < endHour) {\n      return true\n    } else if (startHour === endHour) {\n      return (startMinutes < endMinutes)\n    } else {\n      return false\n    }\n  }\n\n  checkOverlap (newStartHour, newStartMinutes, newEndHour, newEndMinutes, id) {\n    newStartHour = parseInt(newStartHour)\n    newStartMinutes = parseInt(newStartMinutes)\n    newEndHour = parseInt(newEndHour)\n    newEndMinutes = parseInt(newEndMinutes)\n    const checkArray = this.state.schedule.map(item => {\n      if (item.key !== id) {\n        if (newStartHour > item.startHour && newStartHour < item.endHour) {\n          return true\n        } else if (newEndHour > item.startHour && newEndHour < item.endHour) {\n          return true\n        } else if (newStartHour < item.startHour && newEndHour > item.endHour) {\n          return true\n        } else if (newStartHour === item.startHour) {\n          return !(newStartMinutes >= item.endMinutes || newEndMinutes <= item.startMinutes)\n        } else if (newEndHour === item.endHour) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return false\n      }\n    })\n    return checkArray.includes(true)\n  }\n\n  handleChange (event) {\n    const {name, value, type, checked, id} = event.target\n    type === 'checkbox' ? this.searchCheckbox(name, checked, id) : this.setState({[name]: value})\n  }\n\n  addItem (name, id) {\n    const desc = document.getElementById(id).value.trim()\n    if (desc !== '') {\n      this.setState(prevState => {\n        return ({\n          count: prevState.count + 1\n        })\n      })\n\n      this.setState(prevState => {\n        return ({[name]: [...prevState[name], {\n          checked: false,\n          desc: desc,\n          key: this.state.count,\n          isBeingEdited: false\n        }]})\n      })\n      document.getElementById(id).value = ''\n    }\n  }\n\n  addEvent () {\n    const startHourInput = document.getElementById('startHour')\n    const startHour = parseInt(startHourInput.options[startHourInput.selectedIndex].value)\n    const startMinutesInput = document.getElementById('startMinutes')\n    const startMinutes = parseInt(startMinutesInput.options[startMinutesInput.selectedIndex].value)\n    const endHourInput = document.getElementById('endHour')\n    const endHour = parseInt(endHourInput.options[endHourInput.selectedIndex].value)\n    const endMinutesInput = document.getElementById('endMinutes')\n    const endMinutes = parseInt(endMinutesInput.options[endMinutesInput.selectedIndex].value)\n    const desc = document.getElementById('event').value.trim()\n\n    if (desc !== '' && this.checkEvent(startHour, startMinutes, endHour, endMinutes) && !this.checkOverlap(startHour, startMinutes, endHour, endMinutes, 0)) {\n      this.setState(prevState => {\n        return ({\n          count: prevState.count + 1\n        })\n      })\n      this.setState(prevState => {\n        return ({\n          schedule: [...prevState.schedule, {\n            desc: desc,\n            startHour: startHour,\n            startMinutes: startMinutes,\n            endHour: endHour,\n            endMinutes: endMinutes,\n            key: this.state.count,\n            isBeingEdited: false\n          }]\n        })\n      })\n      document.getElementById('event').value = ''\n      startHourInput.selectedIndex = 0\n      startMinutesInput.selectedIndex = 0\n      endHourInput.selectedIndex = 0\n      endMinutesInput.selectedIndex = 0\n    }\n  }\n\n  editItem (name, id, type) {\n    let matchIndex\n    for (let i = 0; i < this.state[name].length; i++) {\n      if (this.state[name][i].key === id) {\n        matchIndex = i\n        break\n      }\n    }\n    const prevState = this.state[name]\n    if (!prevState[matchIndex].isBeingEdited) {\n      prevState[matchIndex].isBeingEdited = true\n      this.setState({[name]: prevState})\n    } else {\n      if (type === 'item') {\n        const newDesc = document.getElementById('edit-' + id).value.trim()\n        if (newDesc !== '') {\n          prevState[matchIndex].desc = newDesc\n          prevState[matchIndex].isBeingEdited = false\n          this.setState({[name]: prevState})\n        }\n      } else if (type === 'event') {\n        const startHourInput = document.getElementById('editStartHour' + id)\n        const newStartHour = parseInt(startHourInput.options[startHourInput.selectedIndex].value)\n        const startMinutesInput = document.getElementById('editStartMinutes' + id)\n        const newStartMinutes = parseInt(startMinutesInput.options[startMinutesInput.selectedIndex].value)\n        const endHourInput = document.getElementById('editEndHour' + id)\n        const newEndHour = parseInt(endHourInput.options[endHourInput.selectedIndex].value)\n        const endMinutesInput = document.getElementById('editEndMinutes' + id)\n        const newEndMinutes = parseInt(endMinutesInput.options[endMinutesInput.selectedIndex].value)\n        const newDesc = document.getElementById('event' + id).value.trim()\n\n        if (newDesc !== '' &&\n        this.checkEvent(newStartHour, newStartMinutes, newEndHour, newEndMinutes) &&\n        !this.checkOverlap(newStartHour, newStartMinutes, newEndHour, newEndMinutes, id)) {\n          prevState[matchIndex] = {\n            desc: newDesc,\n            startHour: newStartHour,\n            startMinutes: newStartMinutes,\n            endHour: newEndHour,\n            endMinutes: newEndMinutes,\n            key: id,\n            isBeingEdited: false\n          }\n          this.setState({[name]: prevState})\n        }\n      }\n    }\n  }\n\n  deleteItem (name, id) {\n    const newArray = this.state[name].filter((item) => item.key !== id)\n    this.setState({[name]: newArray})\n  }\n\n  render () {\n    const events = [].concat(this.state.schedule)\n      .sort(function (x, y) {\n        return (parseInt(x.startHour) - parseInt(y.startHour) || parseInt(x.startMinutes) - parseInt(y.startMinutes))\n      })\n      .map(event => {\n        return <Event\n          desc={event.desc}\n          startHour={event.startHour}\n          startMinutes={event.startMinutes}\n          endHour={event.endHour}\n          endMinutes={event.endMinutes}\n          key={event.key}\n          id={event.key}\n          isBeingEdited={event.isBeingEdited}\n          editItem={this.editItem}\n          deleteItem={this.deleteItem}\n        />\n      })\n\n    const goals = this.state.goals.map(item => {\n      return <Item\n        name='goals'\n        content={item.desc}\n        checked={item.checked}\n        isBeingEdited={item.isBeingEdited}\n        key={item.key}\n        id={item.key}\n        handleChange={this.handleChange}\n        editItem={this.editItem}\n        deleteItem={this.deleteItem}\n      />\n    })\n\n    const todo = this.state.todo.map(item => {\n      return <Item\n        name='todo'\n        content={item.desc}\n        checked={item.checked}\n        isBeingEdited={item.isBeingEdited}\n        key={item.key}\n        id={item.key}\n        handleChange={this.handleChange}\n        editItem={this.editItem}\n        deleteItem={this.deleteItem}\n      />\n    })\n\n    return (\n      <div className='App'>\n        <Header handleChange={this.handleChange} />\n        <Schedule addEvent={this.addEvent} events={events} />\n        <Goals\n          addItem={this.addItem}\n          items={goals}\n          name='goals'\n        />\n        <Motivation handleChange={this.handleChange} />\n        <Todo\n          addItem={this.addItem}\n          items={todo}\n          name='todo'\n        />\n        <Happiness handleChange={this.handleChange} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}